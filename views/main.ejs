<!DOCTYPE html>
<html lang="en">

<head>
  <title>KChef</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?clientId=us7z85rb9hag9LF1Yg4n&submodules=geocoder"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https:/tt/cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <style>
    /* Remove the navbar's default rounded borders and increase the bottom margin */
    .navbar {
      margin-bottom: 50px;
      border-radius: 0;
    }
    
    /* Remove the jumbotron's default bottom margin */
    .jumbotron {
      margin-bottom: 0;
    }

    /* Add a gray background color and some padding to the footer */
    footer {
      background-color: #f2f2f2;
      padding: 25px;
    }

    .grid {
      display: grid;
      /* define the number of grid columns */
      grid-template-columns: 1fr 1fr 1fr
    }
  </style>
</head>

<body>
  <div class="jumbotron">
    <div class="container text-center">
      <h1>케이세프</h1>
      <p>Restaurant Recommandation Website</p>
      <br>
      <form method="post" action="/" class="form-inline">
        <p>Find:
        <input placeholder="Search restaurant" class="form-control" type="text" id="txtRestaurant" name="searchRestaurant">
           Near:
        <input placeholder="Search location" class="form-control" type="text" id="txtLocation" name="searchLocation">
        <input class="btn btn-danger" type="submit" id="submitbtn" value="Submit">
        </p>
      </form>
    </div>
  </div>
  <nav class="navbar navbar-inverse">
    <div class="grid-container grid-container--fit">
      <div class="collapse navbar-collapse" id="myNavbar">
        <ul class="nav navbar-nav">
          <li>
            <a href="/">
              <span class="glyphicon glyphicon-"></span> Home</a>
          </li>
          <% if (!valid) { %>
            <li>
              <a href="/initChoose">
                <span class="glyphicon glyphicon-"></span>Test</a>
            </li>
            <% } %>
        </ul>
        <ul class="nav navbar-nav navbar-right">
          <% if (valid) { %>
            <li>
              <a href="/user">
                <span class="glyphicon glyphicon-user"></span> Profile </a>
            </li>
            <% } else { %>
              <li>
                <a href="/sociallogin">
                  <span class="glyphicon glyphicon-user"></span> Log-in </a>
              </li>
              <% } %>
        </ul>
      </div>
    </div>
  </nav>

<div class="container-fluid" >
  <div class="row">
    <% var x = 0; %>
    <% var lati = []; %>
    <% var long = []; %>
    <% var title = []; %>
      <% restaurants.forEach(function(restaurant){%>
        <div class="col-sm-3" hidden="true" id="<%= x %>">
          <div class="panel panel-primary" onclick="center('<%= restaurant.latitude %>','<%= restaurant.longitude %>')">
            <div class="panel-heading" align="center">
              <%= restaurant.name %>
            </div>
            <div class="panel-body" align="center">
              <% title.push(restaurant.name) %>
              <% lati.push(restaurant.latitude) %>
              <% long.push(restaurant.longitude) %>
              
              <!-- <form method='post' action="/initChoose">
                <input class="all" onclick="enableClick(id)" name="like" id="<%= x %>" value="1 <%= restaurant.name %>" type="image" height="320"
                  width="220"/>
              </form>
              <form method='post' action="/initChoose">
                <button class="button" hidden="true" name="like" id="b<%= x %>" value="-1<%= restaurant.name %>" onclick="disableClick('<%= x %>')">Cancel this choice</button>
              </form> -->
              <% x=x+1; %>
            </div>
          </div>
        </div>
        <% }) %>
  </div>
  <div id="map" style="width:100%;height:400px;"></div>

  <br>
  <footer class="container-fluid text-center">
    <p>Copyright &copy 2018 Edward Kim. All rights reserved.</p>
  </footer>
  
  <!-- Naver Map API related code-->
  <script type="text/javascript">
    var markers = [], infoWindows = [];
    
    //Default center position when map is loaded
    var c_latitude = 37.3595704;
    var c_longitude = 127.105399;

    var latitude = '<%- JSON.stringify(lati) %>';
    var longitude = '<%- JSON.stringify(long) %>';
    var name = '<%- JSON.stringify(title) %>';
    
    latitude = JSON.parse(latitude);
    longitude = JSON.parse(longitude);
    name = JSON.parse(name);
    var name1 = name.split(",");

    var map = new naver.maps.Map('map', {
      center: new naver.maps.LatLng(c_latitude, c_longitude),
      zoom: 10
    });
    
    function center (lati, long) {
      c_latitude = lati;
      c_longitude = long;
      pos = new naver.maps.LatLng(c_latitude, c_longitude)
      map.panTo(pos);
    }

    for(var key in latitude) {
      var marker = new naver.maps.Marker({
        position: new naver.maps.LatLng(latitude[key], longitude[key]),
        map: map
      });

      var infoWindow = new naver.maps.InfoWindow({
        content: '<div style="width:150px;text-align:center;padding:10px;"> <b>"'+ name1[key] +'"</b>.</div>'
      });

      markers.push(marker);
      infoWindows.push(infoWindow);
    }

    // 해당 마커의 인덱스를 seq라는 클로저 변수로 저장하는 이벤트 핸들러를 반환합니다.
    function getClickHandler(seq) {
        return function(e) {
            var marker = markers[seq],
                infoWindow = infoWindows[seq];

            if (infoWindow.getMap()) {
                infoWindow.close();
            } else {
                infoWindow.open(map, marker);
            }
        }
    }

    for (var i=0, ii=markers.length; i<ii; i++) {
        naver.maps.Event.addListener(markers[i], 'click', getClickHandler(i));
    }
    
    //Hide markers that are not inside the map bounds
    naver.maps.Event.addListener(map, 'idle', function() {
      updateMarkers(map, markers);
    });

    function updateMarkers(map, markers) {
      var mapBounds = map.getBounds();
      var marker, position;

      for (var i = 0; i < markers.length; i++) {
          marker = markers[i]
          position = marker.getPosition();

          if (mapBounds.hasLatLng(position)) {
            showMarker(map, marker);
            showTabs(i);
          } else {
            hideMarker(map, marker);
            hideTabs(i);
          }
      }
    }

    function showMarker(map, marker) {
      if (marker.getMap()) return;
      marker.setMap(map);
    }

    function hideMarker(map, marker) {
      if (!marker.getMap()) return;
      marker.setMap(null);
    }
  </script>
  <script>
    function hideTabs(x) {
      document.getElementById(x).hidden = true;
    }
    function showTabs(x) {
      document.getElementById(x).hidden = false;
    }
  </script>
</body>

</html>